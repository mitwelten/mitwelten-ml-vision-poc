# -*- coding: utf-8 -*-
"""OpenCV_PoC.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1GQg34xscl-AWlANseBRy10fhOrdEl_AO
"""

#import numpy as np
#import pandas as pd
import cv2 as cv 
from google.colab.patches import cv2_imshow # for image display
from skimage import io
#from PIL import Image 
#import matplotlib.pylab as plt

url = "https://tamberg-mac.try.yaler.io/1975-0305_2021-06-27T10-06-06Z.jpg"
image = io.imread(url)
cv2_imshow(image)

image_rgb = cv.cvtColor(image, cv.COLOR_BGR2RGB)
cv2_imshow(image_rgb)

image_320x240 = cv.resize(image, (320, 240))
cv2_imshow(image_320x240)

image_320x240_rgb = cv.cvtColor(image_320x240, cv.COLOR_BGR2RGB)
cv2_imshow(image_320x240_rgb)

lower = (245, 245, 245)
upper = (255, 255, 255)
image_320x240_mask = cv.inRange(image_320x240, lower, upper)
cv2_imshow(image_320x240_mask)

image_320x240_dilated = cv.dilate(image_320x240_mask, None, iterations=2)
cv2_imshow(image_320x240_dilated)

contours, _ = cv.findContours(image_320x240_dilated, cv.RETR_TREE, cv.CHAIN_APPROX_SIMPLE)
for contour in contours:
  if cv.contourArea(contour) >= 40:
    (x, y, w, h) = cv.boundingRect(contour)
    cv.rectangle(image_320x240_rgb, (x, y), (x+w, y+h), (0, 255, 0), 1)
cv2_imshow(image_320x240_rgb)

dx = 3280 / 320
dy = 2464 / 240
for contour in contours:
  if cv.contourArea(contour) >= 40:
    (x, y, w, h) = cv.boundingRect(contour)
    x1 = int(x * dx)
    y1 = int(y * dy)
    x2 = int((x + w) * dx)
    y2 = int((y + h) * dy)
    cv.rectangle(image_rgb, (x1, y1), (x2, y2), (0, 255, 0), 4)
cv2_imshow(image_rgb)

